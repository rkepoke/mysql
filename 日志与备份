一、错误日志    通过查看错误日志来定位排查错误所在
当数据库出现任何故障导致无法使用时，第一时间先去查看该日志
1、服务器启动关闭过程中的信息
2、服务器运行过程中的错误信息
日志存放路径，可以通过命令查看：
show like '%datadir%'


二、二进制日志   ///DDL数据库定义语句create...  和DML数据操作语句select,update...
///这个日志记录了所有会改变表结构和表数据的事件   所以可以通过这个日志做数据恢复
又称BINLOG，记录所有的DDL语句和DML语句，不包括查询语句。这个日志不仅非常重要，而且作为开发人员也非常喜欢这个日志。从它的定义可以看出，这个日志记录了所有会改变表结构和表数据的事件，所以一旦数据被误删除或者因为其他原因导致数据丢失，我们可以通过这个日志将数据恢复。是不是觉得很炫酷。

日志存放路径：与错误日志在同一个目录下
命名方式：默认方式为hostname-bin + 编号
mysql每次启动或者flush日志时都会生成一个新的binlog，编号从1开始递增。单个日志达到一定大小时，也会生成新的文件。
1、开启记录binlog的开关
在myslq的安装目录下，有一个配置文件：my.ini

log-bin=mysql-bin 
其中log-bin表示开关开启，mysql-bin是日志名称的前缀。

2、BINLOG的查看方式
由于是二进制文件，所以不能像错误日志那样直接查看，需要借助mysql提供的工具：mysqlbinlog
->mysqldump mysql-bin.000004


三、数据备份   //备份分为 备份表和数据库  两种,,肯定是全部都要备份的
数据备份其实就是利用msyql提供的工具mysqldump将数据备份到指定目录下的指定文件中。
1、备份指定的数据库或者数据库中的某些表
mysqldump 【option】 db_name 【table_names】
2、备份指定的一个或者多个数据库
mysqldump 【option】 --database db_name1  db_name2    
3、备份所有数据库
mysqldump 【option】 -all -databases

比如:将端口为3306的数据库实例中的数据库wd_msg中的表结构以及表数据导出到cd.sql的文件中
->mysqldump -u root -p wd_msg > d:\cd.sql

//数据恢复通过一条条执行这些语句从而还原
 这个文件记录的是DML语句以及DDL语句，查询相关的操作除外。在数据恢复时就可以通过这些语句一条条执行，从而完成数据的还原。

 四、数据恢复
我们将表删除，在重新导入刚刚导出的数据：
drop table testcc;
mysql -P 3307 -u root -p wd_msg> d:\cd.sql 















